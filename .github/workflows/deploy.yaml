name: Deploy Web & Admin to Vercel (manual-selectable)

on:
  workflow_dispatch:
    inputs:
      target:
        description: "배포할 앱 선택"
        required: true
        default: "all"
        type: choice
        options: [all, web, admin]

jobs:
  deploy-web:
    if: ${{ github.event.inputs.target == 'all' || github.event.inputs.target == 'web' }}
    runs-on: ubuntu-latest
    concurrency: web-prod
    env:
      # 절대경로 변수
      APP_DIR:           ${{ github.workspace }}/apps/web
      VERCEL_TOKEN:      ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID:     ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_WEB }}
      PROD_ALIAS:        "web.dddorok.vercel.app"
      HEALTH_PATH:       "/health"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm@9
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Install deps at root
        run: |
          echo "PWD: $(pwd)"
          pnpm install --frozen-lockfile

      - name: Debug verify APP_DIR
        run: |
          echo "APP_DIR = $APP_DIR"
          ls -al "$APP_DIR"

      - name: Vercel Pull (settings)
        run: |
          echo "→ pull settings with --cwd $APP_DIR"
          npx vercel pull \
            --cwd "$APP_DIR" \
            --yes \
            --environment=production \
            --token="$VERCEL_TOKEN"
          echo "Pulled into $APP_DIR/.vercel"
          ls -al "$APP_DIR/.vercel"

      - name: Vercel Build (prebuilt)
        run: |
          echo "→ build with --cwd $APP_DIR"
          npx vercel build \
            --cwd "$APP_DIR" \
            --prod \
            --token="$VERCEL_TOKEN"
          echo "Output at $APP_DIR/.vercel/output"
          ls -al "$APP_DIR/.vercel/output"

      - name: Vercel Deploy (prebuilt)
        id: deploy-web
        run: |
          echo "→ deploy with --cwd $APP_DIR"
          npx vercel deploy \
            --cwd "$APP_DIR" \
            --prebuilt \
            --prod \
            --yes \
            --token="$VERCEL_TOKEN" \
            ".vercel/output"

      - name: Install jq for rollback
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Smoke test & rollback
        run: |
          URL="${{ steps.deploy-web.outputs.url }}$HEALTH_PATH"
          echo "Health-check → $URL"
          CODE=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
          if [ "$CODE" != "200" ]; then
            echo "❌ Health-check failed → rolling back"
            PREV=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" \
              "https://api.vercel.com/v6/deployments?projectId=$VERCEL_PROJECT_ID&limit=2&state=READY" \
              | jq -r '.deployments[1].uid')
            curl -X POST -H "Authorization: Bearer $VERCEL_TOKEN" \
              -H "Content-Type: application/json" \
              "https://api.vercel.com/v2/aliases" \
              -d "{\"deploymentId\":\"$PREV\",\"alias\":\"$PROD_ALIAS\"}"
            exit 1
          else
            echo "✅ OK"
          fi

  deploy-admin:
    if: ${{ github.event.inputs.target == 'all' || github.event.inputs.target == 'admin' }}
    runs-on: ubuntu-latest
    concurrency: admin-prod
    env:
      APP_DIR:           ${{ github.workspace }}/apps/admin
      VERCEL_TOKEN:      ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID:     ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ADMIN }}
      PROD_ALIAS:        "admin.dddorok.vercel.app"
      HEALTH_PATH:       "/health"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm@9
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Install deps at root
        run: pnpm install --frozen-lockfile

      - name: Debug verify APP_DIR
        run: |
          echo "APP_DIR = $APP_DIR"
          ls -al "$APP_DIR"

      - name: Vercel Pull (settings)
        run: |
          npx vercel pull \
            --cwd "$APP_DIR" \
            --yes \
            --environment=production \
            --token="$VERCEL_TOKEN"

      - name: Vercel Build (prebuilt)
        run: |
          npx vercel build \
            --cwd "$APP_DIR" \
            --prod \
            --token="$VERCEL_TOKEN"

      - name: Vercel Deploy (prebuilt)
        id: deploy-admin
        run: |
          npx vercel deploy \
            --cwd "$APP_DIR" \
            --prebuilt \
            --prod \
            --yes \
            --token="$VERCEL_TOKEN" \
            ".vercel/output" \

      - name: Install jq for rollback
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Smoke test & rollback
        run: |
          URL="${{ steps.deploy-admin.outputs.url }}$HEALTH_PATH"
          CODE=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
          if [ "$CODE" != "200" ]; then
            PREV=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" \
              "https://api.vercel.com/v6/deployments?projectId=$VERCEL_PROJECT_ID&limit=2&state=READY" \
              | jq -r '.deployments[1].uid')
            curl -X POST -H "Authorization: Bearer $VERCEL_TOKEN" \
              -H "Content-Type: application/json" \
              "https://api.vercel.com/v2/aliases" \
              -d "{\"deploymentId\":\"$PREV\",\"alias\":\"$PROD_ALIAS\"}"
            exit 1
          fi
